model:
  pretrained_model_name_or_path: "AlekseyCalvin/Flux_Kontext_Dev_fp8_scaled_diffusers"
  model_type: "flux_kontext"
  quantize: true  # Enable quantization for FP8 model
  lora:
    r: 16  # LoRA rank
    lora_alpha: 16  # LoRA alpha
    init_lora_weights: "gaussian"
    target_modules: ["to_k", "to_q", "to_v", "to_out.0"]  # Flux transformer attention modules
    pretrained_weight: null

data:
  class_path: "src.data.dataset.ImageDataset"
  init_args:
    dataset_path: "/raid/lilong/data/face_seg/"  # change to your dataset path
    image_size: [1024, 1024]  # Flux Kontext typical resolution
    caption_dropout_rate: 0.05
    prompt_image_dropout_rate: 0.05
    cache_dir: ${cache.cache_dir}
    use_cache: ${cache.use_cache}
    cache_drop_rate: 0.1
    # Image processing configuration
    random_crop: false
    crop_size: 1024
    crop_scale: [0.8, 1.0]
    center_crop: true
    center_crop_ratio: 1.0
  batch_size: 2  # FP8 allows slightly larger batch size
  num_workers: 2
  shuffle: true

logging:
  output_dir: "/raid/lilong/data/experiment/flux-kontext-fp8/"  # change to your output path
  logging_dir: "logs"
  report_to: "tensorboard"
  tracker_project_name: "flux_kontext_fp8_lora"

optimizer:
  class_path: bnb.optim.Adam8bit  # 8-bit optimizer for memory efficiency
  init_args:
    lr: 0.0001  # same learning rate as BF16
    betas: [0.9, 0.999]
  # Alternative: standard AdamW if memory is sufficient
  # class_path: "torch.optim.AdamW"
  # init_args:
  #   lr: 0.0001
  #   weight_decay: 0.01
  #   betas: [0.9, 0.999]
  #   eps: 1e-8

lr_scheduler:
  scheduler_type: "cosine"
  warmup_steps: 100
  num_cycles: 0.5
  power: 1.0

train:
  gradient_accumulation_steps: 4  # reduced due to larger batch size
  max_train_steps: 5000
  num_epochs: 50
  checkpointing_steps: 100
  checkpoints_total_limit: 10
  max_grad_norm: 1.0
  mixed_precision: "bf16"  # use BF16 for computation, FP8 for storage
  gradient_checkpointing: true
  low_memory: true
  vae_encoder_device: cuda:0
  text_encoder_device: cuda:1  # CLIP encoder
  text_encoder_2_device: cuda:1  # T5 encoder

cache:
  vae_encoder_device: cuda:0
  text_encoder_device: cuda:1
  text_encoder_2_device: cuda:1
  cache_dir: "/raid/lilong/data/experiment/flux-kontext-fp8/cache"
  use_cache: true

predict:
  devices:
    vae: cuda:0
    text_encoder: cuda:1  # CLIP
    text_encoder_2: cuda:1  # T5
    transformer: cuda:0

# Training resume setting
resume_from_checkpoint: "latest"

# Validation setting
validation:
  enabled: false
  validation_steps: 200
  num_validation_samples: 4

# Expected memory usage: ~18GB VRAM for training with batch_size=2
# Training speed: ~30s/it on A100 80GB (faster than BF16)
# Model quality: High, minimal quality loss compared to BF16
# Use case: Balanced performance and memory efficiency
